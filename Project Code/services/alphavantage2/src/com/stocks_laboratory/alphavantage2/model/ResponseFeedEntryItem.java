/*
 * 
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.stocks_laboratory.alphavantage2.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.stocks_laboratory.alphavantage2.model.ResponseTickerSentimentEntryItem;
import com.stocks_laboratory.alphavantage2.model.ResponseTopicsEntryItem;
import java.util.ArrayList;
import java.util.List;
/**
 * ResponseFeedEntryItem
 */

public class ResponseFeedEntryItem {
  @JsonProperty("summary")
  private String summary = null;

  @JsonProperty("source_domain")
  private String source_domain = null;

  @JsonProperty("topics")
  private List<ResponseTopicsEntryItem> topics = new ArrayList<>();

  @JsonProperty("overall_sentiment_label")
  private String overall_sentiment_label = null;

  @JsonProperty("ticker_sentiment")
  private List<ResponseTickerSentimentEntryItem> ticker_sentiment = new ArrayList<>();

  @JsonProperty("overall_sentiment_score")
  private Double overall_sentiment_score = null;

  @JsonProperty("source")
  private String source = null;

  @JsonProperty("title")
  private String title = null;

  @JsonProperty("url")
  private String url = null;

  @JsonProperty("category_within_source")
  private String category_within_source = null;

  @JsonProperty("banner_image")
  private String banner_image = null;

  @JsonProperty("time_published")
  private String time_published = null;

  @JsonProperty("authors")
  private List<String> authors = new ArrayList<>();

  public ResponseFeedEntryItem summary(String summary) {
    this.summary = summary;
    return this;
  }

   /**
   * Get summary
   * @return summary
  **/
  public String getSummary() {
    return summary;
  }

  public void setSummary(String summary) {
    this.summary = summary;
  }

  public ResponseFeedEntryItem source_domain(String source_domain) {
    this.source_domain = source_domain;
    return this;
  }

   /**
   * Get source_domain
   * @return source_domain
  **/
  public String getSourceDomain() {
    return source_domain;
  }

  public void setSourceDomain(String source_domain) {
    this.source_domain = source_domain;
  }

  public ResponseFeedEntryItem topics(List<ResponseTopicsEntryItem> topics) {
    this.topics = topics;
    return this;
  }

  public ResponseFeedEntryItem addTopicsItem(ResponseTopicsEntryItem topicsItem) {
    this.topics.add(topicsItem);
    return this;
  }

   /**
   * Get topics
   * @return topics
  **/
  public List<ResponseTopicsEntryItem> getTopics() {
    return topics;
  }

  public void setTopics(List<ResponseTopicsEntryItem> topics) {
    this.topics = topics;
  }

  public ResponseFeedEntryItem overall_sentiment_label(String overall_sentiment_label) {
    this.overall_sentiment_label = overall_sentiment_label;
    return this;
  }

   /**
   * Get overall_sentiment_label
   * @return overall_sentiment_label
  **/
  public String getOverallSentimentLabel() {
    return overall_sentiment_label;
  }

  public void setOverallSentimentLabel(String overall_sentiment_label) {
    this.overall_sentiment_label = overall_sentiment_label;
  }

  public ResponseFeedEntryItem ticker_sentiment(List<ResponseTickerSentimentEntryItem> ticker_sentiment) {
    this.ticker_sentiment = ticker_sentiment;
    return this;
  }

  public ResponseFeedEntryItem addTickerSentimentItem(ResponseTickerSentimentEntryItem ticker_sentimentItem) {
    this.ticker_sentiment.add(ticker_sentimentItem);
    return this;
  }

   /**
   * Get ticker_sentiment
   * @return ticker_sentiment
  **/
  public List<ResponseTickerSentimentEntryItem> getTickerSentiment() {
    return ticker_sentiment;
  }

  public void setTickerSentiment(List<ResponseTickerSentimentEntryItem> ticker_sentiment) {
    this.ticker_sentiment = ticker_sentiment;
  }

  public ResponseFeedEntryItem overall_sentiment_score(Double overall_sentiment_score) {
    this.overall_sentiment_score = overall_sentiment_score;
    return this;
  }

   /**
   * Get overall_sentiment_score
   * @return overall_sentiment_score
  **/
  public Double getOverallSentimentScore() {
    return overall_sentiment_score;
  }

  public void setOverallSentimentScore(Double overall_sentiment_score) {
    this.overall_sentiment_score = overall_sentiment_score;
  }

  public ResponseFeedEntryItem source(String source) {
    this.source = source;
    return this;
  }

   /**
   * Get source
   * @return source
  **/
  public String getSource() {
    return source;
  }

  public void setSource(String source) {
    this.source = source;
  }

  public ResponseFeedEntryItem title(String title) {
    this.title = title;
    return this;
  }

   /**
   * Get title
   * @return title
  **/
  public String getTitle() {
    return title;
  }

  public void setTitle(String title) {
    this.title = title;
  }

  public ResponseFeedEntryItem url(String url) {
    this.url = url;
    return this;
  }

   /**
   * Get url
   * @return url
  **/
  public String getUrl() {
    return url;
  }

  public void setUrl(String url) {
    this.url = url;
  }

  public ResponseFeedEntryItem category_within_source(String category_within_source) {
    this.category_within_source = category_within_source;
    return this;
  }

   /**
   * Get category_within_source
   * @return category_within_source
  **/
  public String getCategoryWithinSource() {
    return category_within_source;
  }

  public void setCategoryWithinSource(String category_within_source) {
    this.category_within_source = category_within_source;
  }

  public ResponseFeedEntryItem banner_image(String banner_image) {
    this.banner_image = banner_image;
    return this;
  }

   /**
   * Get banner_image
   * @return banner_image
  **/
  public String getBannerImage() {
    return banner_image;
  }

  public void setBannerImage(String banner_image) {
    this.banner_image = banner_image;
  }

  public ResponseFeedEntryItem time_published(String time_published) {
    this.time_published = time_published;
    return this;
  }

   /**
   * Get time_published
   * @return time_published
  **/
  public String getTimePublished() {
    return time_published;
  }

  public void setTimePublished(String time_published) {
    this.time_published = time_published;
  }

  public ResponseFeedEntryItem authors(List<String> authors) {
    this.authors = authors;
    return this;
  }

  public ResponseFeedEntryItem addAuthorsItem(String authorsItem) {
    this.authors.add(authorsItem);
    return this;
  }

   /**
   * Get authors
   * @return authors
  **/
  public List<String> getAuthors() {
    return authors;
  }

  public void setAuthors(List<String> authors) {
    this.authors = authors;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ResponseFeedEntryItem Response_feedEntryItem = (ResponseFeedEntryItem) o;
    return Objects.equals(this.summary, Response_feedEntryItem.summary) &&
        Objects.equals(this.source_domain, Response_feedEntryItem.source_domain) &&
        Objects.equals(this.topics, Response_feedEntryItem.topics) &&
        Objects.equals(this.overall_sentiment_label, Response_feedEntryItem.overall_sentiment_label) &&
        Objects.equals(this.ticker_sentiment, Response_feedEntryItem.ticker_sentiment) &&
        Objects.equals(this.overall_sentiment_score, Response_feedEntryItem.overall_sentiment_score) &&
        Objects.equals(this.source, Response_feedEntryItem.source) &&
        Objects.equals(this.title, Response_feedEntryItem.title) &&
        Objects.equals(this.url, Response_feedEntryItem.url) &&
        Objects.equals(this.category_within_source, Response_feedEntryItem.category_within_source) &&
        Objects.equals(this.banner_image, Response_feedEntryItem.banner_image) &&
        Objects.equals(this.time_published, Response_feedEntryItem.time_published) &&
        Objects.equals(this.authors, Response_feedEntryItem.authors);
  }

  @Override
  public int hashCode() {
    return Objects.hash(summary, source_domain, topics, overall_sentiment_label, ticker_sentiment, overall_sentiment_score, source, title, url, category_within_source, banner_image, time_published, authors);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ResponseFeedEntryItem {\n");
    
    sb.append("    summary: ").append(toIndentedString(summary)).append("\n");
    sb.append("    source_domain: ").append(toIndentedString(source_domain)).append("\n");
    sb.append("    topics: ").append(toIndentedString(topics)).append("\n");
    sb.append("    overall_sentiment_label: ").append(toIndentedString(overall_sentiment_label)).append("\n");
    sb.append("    ticker_sentiment: ").append(toIndentedString(ticker_sentiment)).append("\n");
    sb.append("    overall_sentiment_score: ").append(toIndentedString(overall_sentiment_score)).append("\n");
    sb.append("    source: ").append(toIndentedString(source)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    url: ").append(toIndentedString(url)).append("\n");
    sb.append("    category_within_source: ").append(toIndentedString(category_within_source)).append("\n");
    sb.append("    banner_image: ").append(toIndentedString(banner_image)).append("\n");
    sb.append("    time_published: ").append(toIndentedString(time_published)).append("\n");
    sb.append("    authors: ").append(toIndentedString(authors)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
