/*
 * 
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 2.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.stocks_laboratory.alphavantage2.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
/**
 * ResponseTickerSentimentEntryItem
 */

public class ResponseTickerSentimentEntryItem {
  @JsonProperty("ticker")
  private String ticker = null;

  @JsonProperty("ticker_sentiment_score")
  private String ticker_sentiment_score = null;

  @JsonProperty("ticker_sentiment_label")
  private String ticker_sentiment_label = null;

  @JsonProperty("relevance_score")
  private String relevance_score = null;

  public ResponseTickerSentimentEntryItem ticker(String ticker) {
    this.ticker = ticker;
    return this;
  }

   /**
   * Get ticker
   * @return ticker
  **/
  public String getTicker() {
    return ticker;
  }

  public void setTicker(String ticker) {
    this.ticker = ticker;
  }

  public ResponseTickerSentimentEntryItem ticker_sentiment_score(String ticker_sentiment_score) {
    this.ticker_sentiment_score = ticker_sentiment_score;
    return this;
  }

   /**
   * Get ticker_sentiment_score
   * @return ticker_sentiment_score
  **/
  public String getTickerSentimentScore() {
    return ticker_sentiment_score;
  }

  public void setTickerSentimentScore(String ticker_sentiment_score) {
    this.ticker_sentiment_score = ticker_sentiment_score;
  }

  public ResponseTickerSentimentEntryItem ticker_sentiment_label(String ticker_sentiment_label) {
    this.ticker_sentiment_label = ticker_sentiment_label;
    return this;
  }

   /**
   * Get ticker_sentiment_label
   * @return ticker_sentiment_label
  **/
  public String getTickerSentimentLabel() {
    return ticker_sentiment_label;
  }

  public void setTickerSentimentLabel(String ticker_sentiment_label) {
    this.ticker_sentiment_label = ticker_sentiment_label;
  }

  public ResponseTickerSentimentEntryItem relevance_score(String relevance_score) {
    this.relevance_score = relevance_score;
    return this;
  }

   /**
   * Get relevance_score
   * @return relevance_score
  **/
  public String getRelevanceScore() {
    return relevance_score;
  }

  public void setRelevanceScore(String relevance_score) {
    this.relevance_score = relevance_score;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ResponseTickerSentimentEntryItem Response_ticker_sentimentEntryItem = (ResponseTickerSentimentEntryItem) o;
    return Objects.equals(this.ticker, Response_ticker_sentimentEntryItem.ticker) &&
        Objects.equals(this.ticker_sentiment_score, Response_ticker_sentimentEntryItem.ticker_sentiment_score) &&
        Objects.equals(this.ticker_sentiment_label, Response_ticker_sentimentEntryItem.ticker_sentiment_label) &&
        Objects.equals(this.relevance_score, Response_ticker_sentimentEntryItem.relevance_score);
  }

  @Override
  public int hashCode() {
    return Objects.hash(ticker, ticker_sentiment_score, ticker_sentiment_label, relevance_score);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ResponseTickerSentimentEntryItem {\n");
    
    sb.append("    ticker: ").append(toIndentedString(ticker)).append("\n");
    sb.append("    ticker_sentiment_score: ").append(toIndentedString(ticker_sentiment_score)).append("\n");
    sb.append("    ticker_sentiment_label: ").append(toIndentedString(ticker_sentiment_label)).append("\n");
    sb.append("    relevance_score: ").append(toIndentedString(relevance_score)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
